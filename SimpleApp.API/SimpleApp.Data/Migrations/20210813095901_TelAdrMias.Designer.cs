// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleApp.Data;

namespace SimpleApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210813095901_TelAdrMias")]
    partial class TelAdrMias
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoscRezerwacja", b =>
                {
                    b.Property<int>("GoscieId")
                        .HasColumnType("int");

                    b.Property<int>("RezerwacjeId")
                        .HasColumnType("int");

                    b.HasKey("GoscieId", "RezerwacjeId");

                    b.HasIndex("RezerwacjeId");

                    b.ToTable("GoscRezerwacja");
                });

            modelBuilder.Entity("SimpleApp.Data.Models.Gosc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodPocztowy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miasto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Goscie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataUrodzenia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adam.adamowski@gmail.com",
                            Imie = "Adam",
                            Nazwisko = "Adamowski"
                        },
                        new
                        {
                            Id = 2,
                            DataUrodzenia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "piotr.piotrowski@gmail.com",
                            Imie = "Piotr",
                            Nazwisko = "Piotrowski"
                        },
                        new
                        {
                            Id = 3,
                            DataUrodzenia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bartosz.bartoszowski@gmail.com",
                            Imie = "Bartosz",
                            Nazwisko = "Bartoszowski"
                        },
                        new
                        {
                            Id = 4,
                            Adres = "ul. Jackowska 56",
                            DataUrodzenia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jacek.jackowski@gmail.com",
                            Imie = "Jacek",
                            Miasto = "Warszawa",
                            Nazwisko = "Jackowski",
                            Telefon = "123 456 789"
                        });
                });

            modelBuilder.Entity("SimpleApp.Data.Models.Rezerwacja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataWymeldowania")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataZameldowania")
                        .HasColumnType("datetime2");

                    b.Property<int>("KodRezerwacji")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<float>("Prowizja")
                        .HasColumnType("real");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zrodlo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rezerwacje");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cena = 120f,
                            DataUtworzenia = new DateTime(2021, 8, 13, 11, 59, 0, 928, DateTimeKind.Local).AddTicks(5782),
                            DataWymeldowania = new DateTime(2021, 8, 13, 11, 59, 0, 930, DateTimeKind.Local).AddTicks(8467),
                            DataZameldowania = new DateTime(2021, 8, 13, 11, 59, 0, 930, DateTimeKind.Local).AddTicks(8170),
                            KodRezerwacji = 1,
                            Prowizja = 0f,
                            Waluta = "PLN"
                        },
                        new
                        {
                            Id = 2,
                            Cena = 150f,
                            DataUtworzenia = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(65),
                            DataWymeldowania = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(116),
                            DataZameldowania = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(107),
                            KodRezerwacji = 2,
                            Prowizja = 0f,
                            Waluta = "PLN"
                        },
                        new
                        {
                            Id = 3,
                            Cena = 170f,
                            DataUtworzenia = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(152),
                            DataWymeldowania = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(158),
                            DataZameldowania = new DateTime(2021, 8, 13, 11, 59, 0, 931, DateTimeKind.Local).AddTicks(155),
                            KodRezerwacji = 3,
                            Prowizja = 0f,
                            Waluta = "PLN"
                        });
                });

            modelBuilder.Entity("GoscRezerwacja", b =>
                {
                    b.HasOne("SimpleApp.Data.Models.Gosc", null)
                        .WithMany()
                        .HasForeignKey("GoscieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleApp.Data.Models.Rezerwacja", null)
                        .WithMany()
                        .HasForeignKey("RezerwacjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
